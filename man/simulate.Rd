% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.r
\name{simulate}
\alias{simulate}
\title{Run a simulation}
\usage{
simulate(t.sim, expansion, rehabilitation, failure.rate, income = 0,
  initial.budget = Inf, initial.inventory = NULL)
}
\arguments{
\item{t.sim}{number of years to simulate}

\item{expansion}{either a scalar the describing the number of pipes added
every year, or a vector of length \code{t.sim}.}

\item{rehabilitation}{a (combination of) rehabilitation strategies functions. See details below.}

\item{failure.rate}{a function describing the probability for a pipe to fail in the next
year given the pipe age, number of failures, and the point in time of the last failure (if any).}

\item{income}{either a scalar describing the annual income, or a vector of length \code{t.sim}.}

\item{initial.budget}{initial budget}

\item{initial.inventory}{If equals \code{NULL} the simulation starts without pipes,
if \code{initial.inventory} is integer it specifies the number of initial pipes,
or it can be a \code{data.frame} containing the initial inventory.}
}
\value{
A list of length \code{t.sim+1} containing all modeled states. A state
is a list consisting of the time, the budget, and the inventory at a given point in time.
}
\description{
Simulates failures expansion, rehabilitation and cost of a pipe network.
The simulation is stochastic.
}
\details{
The rehabilitation is defined by combining different simple replacement strategies.
See the example how the strategies are can be linked with the pipe operator.

The \code{failure.rate} is a function that must take \code{age, time.last.failure, n.failure}
as arguments.

The cost are calcualted as a finction of the diameter, assuming all pipes have a
length of 100 meters.
}
\examples{

## Define failure rate
f.rate <- function(age, time.last.failure, n.failure) {
  if(n.failure==0){
    return(1/30)
  } else {
    return(1/10)
  }
}


## define a complicated (and probably useless) rehabilitation strategy
mystrategy <- . \%>\%
  replace.n.highest.risk(n=2, failure.rate=f.rate) \%>\%
  replace.more.failures.than(max.failures=5) \%>\%
  replace.older.than(max.age=100) \%>\%
  replace.n.oldest(n=3) \%>\%
  replace.n.random(n=4)
## This means: every year (if we have enough budget!), replace first the 2 pipes
## with the highest risk, then all pipes with more than 5 failures,
## then all pipes older then 100 years, then the 3 oldest pipes remaining, and
## finally replace 4 randomly selected pipes. 


## run the simulation
result <- simulate(t.sim=100,                  # run it for 100 years
                   expansion=0,                # do not expand the system
                   rehabilitation=mystrategy,  # use the strategy defined above
                   failure.rate=f.rate,        # use the failure rate defined above
                   income = 1e6,               # the annual income
                   initial.budget=30e6,   
                   initial.inventory=50)       # start the simulation with 50 new pipes

}
\seealso{
Different replacement strategies are implemented: \code{\link{replace.n.highest.risk}},
\code{\link{replace.n.oldest}}, \code{\link{replace.n.random}}, \code{\link{replace.older.than}},
\code{\link{replace.more.failures.than}}, \code{\link{do.nothing}}
}
\author{
Andreas Scheidegger
}
